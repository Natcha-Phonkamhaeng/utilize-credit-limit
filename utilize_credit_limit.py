# -*- coding: utf-8 -*-
"""utilize credit limit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-AvBzLdwimJIB7FHJebzOu_ZUWdMmI7T

# Production CODE
"""

import pandas as pd
import numpy as np

# ใส่ file ที่เรา upload เข้าไป
credit = '/content/database for credit limit.xlsx'
opus = '/content/opus enquiry.xlsx'


####################################################### SOURCE CODE ##############################################################################################
df_credit = pd.read_excel(credit)
df_opus = pd.read_excel(opus)
#select only specific columns
df_opus = df_opus[['Customer Code', 'Customer Name', 'Amount (THB)', 'Aging Sort']]

#checking parent and child company with credit master file
df_opus_new = df_opus.merge(df_credit, left_on='Customer Code', right_on='child code')[['Customer Code', 'Customer Name', 'Amount (THB)', 'Aging Sort',
                                                                        'Parent Customer Code', 'Parent Customer Name']].copy()

# grouping parent company
df_opus_new_group = df_opus_new.groupby(['Parent Customer Code', 'Parent Customer Name', 'Aging Sort'])['Amount (THB)'].sum().reset_index().copy()

# pivot columns "Aging Sort" after pivot columns, we will lose column Parent Customer Name but we will get it back later
df_opus_new_group_pivot = df_opus_new_group.pivot(index='Parent Customer Code', columns='Aging Sort', values=['Amount (THB)']).copy()

# set multilevel from pandas pivot to be one level dataframe
df_opus_new_group_pivot.columns=['01-07 days','08-15 days','16-30 days','31-60 days','61-90 days','Not due']
df_opus_new_group_pivot.reset_index(inplace=True)

# getting columns Parent Customer Name from credit master file
df_final = df_opus_new_group_pivot.merge(df_credit, left_on='Parent Customer Code', right_on='Parent Customer Code', how='left').iloc[:, :9]

# after we get Parent Customer Name back, it will duplicated since one Parent name have many child name so we have to drop duplicated
df_final = df_final.drop_duplicates(subset='Parent Customer Code')
df_final.rename(columns={
    'Parent Customer Code': 'Customer Code',
    'Parent Customer Name': 'Customer Name',
    'Parent Credit Limit': 'Credit Limit'
}, inplace=True)

# aggregate new columns for making final report
df_final = df_final.fillna(0)
df_final['over due'] = df_final['01-07 days'] + df_final['08-15 days'] + df_final['16-30 days'] + df_final['31-60 days'] + df_final['61-90 days']
df_final['outstanding'] = df_final['over due'] + df_final['Not due']
df_final['%'] = df_final['outstanding']/df_final['Credit Limit']*100
df_final = df_final.sort_values(by='%', ascending=False)

# re-order columns
col = ['Customer Code', 'Customer Name', 'Credit Limit', '%', 'Not due', '01-07 days', '08-15 days',
       '16-30 days', '31-60 days', '61-90 days', 'over due', 'outstanding']
df_final = df_final.reindex(columns=col)

# save output in excel format
df_final.to_excel('utilize credit limit.xlsx', index=False)

"""# Code for Debug"""

import pandas as pd
import numpy as np

df_credit = pd.read_excel('/content/database for credit limit.xlsx')
df_opus = pd.read_excel('/content/opus enquiry.xlsx')


df_opus = df_opus[['Customer Code', 'Customer Name', 'Amount (THB)', 'Aging Sort']]

print('OPUS')
print(f'row : {df_opus.shape[0]}')
print(f'columns : {df_opus.shape[1]}')

df_credit.head(5)

df_credit['child code'].duplicated().sum()

df_opus.merge(df_credit, left_on='Customer Code', right_on='child code').columns

df_opus_new = df_opus.merge(df_credit, left_on='Customer Code', right_on='child code')[['Customer Code', 'Customer Name', 'Amount (THB)', 'Aging Sort',
                                                                        'Parent Customer Code', 'Parent Customer Name']].copy()

df_opus_new.info()

# checking the 3 missing row which is not found in credit master
df_opus[~df_opus['Customer Code'].isin(df_opus_new['Customer Code'])]

df_opus_new.sample(5)

df_opus_new_group = df_opus_new.groupby(['Parent Customer Code', 'Parent Customer Name', 'Aging Sort'])['Amount (THB)'].sum().reset_index().copy()
df_opus_new_group.head(7)

print('OPUS after grouping')
print(f'row : {df_opus_new_group.shape[0]}')
print(f'columns : {df_opus_new_group.shape[1]}')

df_opus_new_group_pivot = df_opus_new_group.pivot(index='Parent Customer Code', columns='Aging Sort', values=['Amount (THB)']).copy()
df_opus_new_group_pivot

df_opus_new_group_pivot.columns=['01-07 days','08-15 days','16-30 days','31-60 days','61-90 days','Not due']
df_opus_new_group_pivot.reset_index(inplace=True)

df_opus_new_group_pivot

df_opus_new_group_pivot.iloc[:, 1:].sum()

df_final = df_opus_new_group_pivot.merge(df_credit, left_on='Parent Customer Code', right_on='Parent Customer Code', how='left').iloc[:, :9]
df_final = df_final.drop_duplicates(subset='Parent Customer Code')
df_final

df_final.rename(columns={
    'Parent Customer Code': 'Customer Code',
    'Parent Customer Name': 'Customer Name',
    'Parent Credit Limit': 'Credit Limit'
}, inplace=True)

df_final = df_final.fillna(0)

df_final['over due'] = df_final['01-07 days'] + df_final['08-15 days'] + df_final['16-30 days'] + df_final['31-60 days'] + df_final['61-90 days']
df_final['outstanding'] = df_final['over due'] + df_final['Not due']
df_final['%'] = df_final['outstanding']/df_final['Credit Limit']*100
df_final = df_final.sort_values(by='%', ascending=False)

col = ['Customer Code', 'Customer Name', 'Credit Limit', '%', 'Not due', '01-07 days', '08-15 days',
       '16-30 days', '31-60 days', '61-90 days', 'over due', 'outstanding']
df_final = df_final.reindex(columns=col)

df_final.sum()

df_final.to_excel('utilize credit limit.xlsx', index=False)